!SESSION 2023-12-07 14:59:50.566 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-07 15:00:30.775
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-07 15:00:30.775
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-07 15:00:35.147
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-12-07 15:06:32.801 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-07 15:06:44.175
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-07 15:06:44.175
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-07 15:06:50.522
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.core.jobs 4 2 2023-12-07 15:06:59.760
!MESSAGE An internal error occurred during: "https://www.eclipse.org/setups/setups.zip".
!STACK 0
java.lang.NullPointerException: Cannot invoke "org.osgi.framework.BundleContext.createFilter(String)" because "context" is null
	at org.osgi.util.tracker.ServiceTracker.<init>(ServiceTracker.java:187)
	at org.osgi.util.tracker.ServiceTracker.<init>(ServiceTracker.java:250)
	at org.eclipse.ecf.internal.provider.filetransfer.httpclient5.Activator.getLogService(Activator.java:202)
	at org.eclipse.ecf.internal.provider.filetransfer.httpclient5.Activator.log(Activator.java:213)
	at org.eclipse.ecf.provider.filetransfer.httpclient5.HttpClientRetrieveFileTransfer.hardClose(HttpClientRetrieveFileTransfer.java:200)
	at org.eclipse.ecf.provider.filetransfer.retrieve.AbstractRetrieveFileTransfer$1.performFileTransfer(AbstractRetrieveFileTransfer.java:199)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:76)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.core.jobs 2 2 2023-12-07 15:07:00.996
!MESSAGE Job found still running after platform shutdown.  Jobs should be canceled by the plugin that scheduled them during shutdown: org.eclipse.oomph.internal.ui.EarlyStart$1
!SESSION 2023-12-10 02:00:06.303 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-10 02:00:18.466
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-10 02:00:18.466
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-10 02:00:23.285
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-12-10 02:03:31.858 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-10 02:03:36.792
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-10 02:03:36.792
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-10 02:03:41.749
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-12-10 12:40:16.508 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-10 12:40:24.494
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-10 12:40:24.494
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-10 12:40:32.501
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-12-10 23:37:33.676 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-10 23:38:01.314
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-10 23:38:01.314
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-10 23:38:09.186
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-12-11 00:16:55.461 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-11 00:17:02.154
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-11 00:17:02.154
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-11 00:17:07.785
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.core.jobs 4 2 2023-12-11 00:45:59.825
!MESSAGE IJobChangeListener timeout detected. Further calls to IJobChangeListener may occur in random order and join(family) can return too soon. IJobChangeListener should return within 3000 ms. IJobChangeListener methods should not block. Possible deadlock.
!STACK 0
java.util.concurrent.TimeoutException: IJobChangeListener timeout detected. Further calls to IJobChangeListener may occur in random order and join(family) can return too soon. IJobChangeListener should return within 3000 ms. IJobChangeListener methods should not block. Possible deadlock.
	at org.eclipse.core.internal.jobs.JobListeners.waitAndSendEvents(JobListeners.java:106)
	at org.eclipse.core.internal.jobs.JobManager.startJob(JobManager.java:1752)
	at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)
!SUBENTRY 1 org.eclipse.core.jobs 4 2 2023-12-11 00:45:59.826
!MESSAGE Thread that is running the IJobChangeListener: org.eclipse.jdt.internal.ui.text.JavaReconciler
	at org.eclipse.swt.internal.win32.OS.PostThreadMessage(Native Method)
	at org.eclipse.swt.widgets.Display.wakeThread(Display.java:5034)
	at org.eclipse.swt.widgets.Synchronizer.addLast(Synchronizer.java:79)
	at org.eclipse.swt.widgets.Synchronizer.asyncExec(Synchronizer.java:101)
	at org.eclipse.ui.internal.UISynchronizer.asyncExec(UISynchronizer.java:112)
	at org.eclipse.swt.widgets.Display.asyncExec(Display.java:775)
	at org.eclipse.jface.util.Throttler.throttledExec(Throttler.java:96)
	at org.eclipse.ui.internal.progress.ProgressManager.addJobInfo(ProgressManager.java:722)
	at org.eclipse.ui.internal.progress.ProgressManager$1.updateFor(ProgressManager.java:502)
	at org.eclipse.ui.internal.progress.ProgressManager$1.scheduled(ProgressManager.java:474)
	at org.eclipse.core.internal.jobs.JobListeners$$Lambda$114/0x0000000100217860.notify(Unknown Source)
	at org.eclipse.core.internal.jobs.JobListeners.sendEvent(JobListeners.java:153)
	at org.eclipse.core.internal.jobs.JobListeners.sendEventsAsync(JobListeners.java:140)
	at org.eclipse.core.internal.jobs.JobListeners.waitAndSendEvents(JobListeners.java:80)
	at org.eclipse.core.internal.jobs.JobManager.withWriteLock(JobManager.java:524)
	at org.eclipse.core.internal.jobs.JobManager.schedule(JobManager.java:1373)
	at org.eclipse.core.internal.jobs.InternalJob.schedule(InternalJob.java:396)
	at org.eclipse.core.runtime.jobs.Job.schedule(Job.java:654)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.postAsyncUpdate(PackageExplorerContentProvider.java:187)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.executeRunnables(PackageExplorerContentProvider.java:167)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider.elementChanged(PackageExplorerContentProvider.java:143)
	at org.eclipse.jdt.internal.core.DeltaProcessor$3.run(DeltaProcessor.java:1757)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.core.DeltaProcessor.notifyListeners(DeltaProcessor.java:1745)
	at org.eclipse.jdt.internal.core.DeltaProcessor.fireReconcileDelta(DeltaProcessor.java:1596)
	at org.eclipse.jdt.internal.core.DeltaProcessor.fire(DeltaProcessor.java:1555)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:781)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

All thread infos: 
"main" prio=6 Id=1 BLOCKED on java.lang.Class@1697f2b3 owned by "org.eclipse.jdt.internal.ui.text.JavaReconciler" Id=43
	at org.eclipse.swt.widgets.Display.findDisplay(Display.java:1452)
	-  blocked on java.lang.Class@1697f2b3
	at org.eclipse.swt.widgets.Display.getCurrent(Display.java:1557)
	at org.eclipse.swt.ole.win32.OleFrame.getMsgProc(OleFrame.java:191)
	at org.eclipse.swt.internal.win32.OS.PeekMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3655)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	...

"Reference Handler" daemon prio=10 Id=2 RUNNABLE
	at java.base@17.0.8/java.lang.ref.Reference.waitForReferencePendingList(Native Method)
	at java.base@17.0.8/java.lang.ref.Reference.processPendingReferences(Reference.java:253)
	at java.base@17.0.8/java.lang.ref.Reference$ReferenceHandler.run(Reference.java:215)

"Finalizer" daemon prio=8 Id=3 WAITING on java.lang.ref.ReferenceQueue$Lock@737f0ab9
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.ref.ReferenceQueue$Lock@737f0ab9
	at java.base@17.0.8/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
	at java.base@17.0.8/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:176)
	at java.base@17.0.8/java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:172)

"Signal Dispatcher" daemon prio=9 Id=4 RUNNABLE

"Attach Listener" daemon prio=5 Id=5 RUNNABLE

"Common-Cleaner" daemon prio=8 Id=21 TIMED_WAITING on java.lang.ref.ReferenceQueue$Lock@6e484a38
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.ref.ReferenceQueue$Lock@6e484a38
	at java.base@17.0.8/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
	at java.base@17.0.8/jdk.internal.ref.CleanerImpl.run(CleanerImpl.java:140)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)
	at java.base@17.0.8/jdk.internal.misc.InnocuousThread.run(InnocuousThread.java:162)

"Notification Thread" daemon prio=9 Id=22 RUNNABLE

"Active Thread: Equinox Container: 1ac55bf6-2e82-4b33-b127-328afb65501c" prio=5 Id=24 TIMED_WAITING on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@1227e78b
	at java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
	-  waiting on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@1227e78b
	at java.base@17.0.8/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
	at java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
	at java.base@17.0.8/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
	at java.base@17.0.8/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
	at java.base@17.0.8/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
	at java.base@17.0.8/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
	at java.base@17.0.8/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	...

"Framework Event Dispatcher: Equinox Container: 1ac55bf6-2e82-4b33-b127-328afb65501c" daemon prio=5 Id=26 WAITING on org.eclipse.osgi.framework.eventmgr.EventManager$EventThread@1458ce46
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.osgi.framework.eventmgr.EventManager$EventThread@1458ce46
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.getNextEvent(EventManager.java:400)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:341)

"Start Level: Equinox Container: 1ac55bf6-2e82-4b33-b127-328afb65501c" daemon prio=5 Id=27 WAITING on org.eclipse.osgi.framework.eventmgr.EventManager$EventThread@1ff934b6
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.osgi.framework.eventmgr.EventManager$EventThread@1ff934b6
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.getNextEvent(EventManager.java:400)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:341)

"SCR Component Actor" daemon prio=5 Id=28 WAITING on java.util.LinkedList@33cca4fb
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.util.LinkedList@33cca4fb
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.apache.felix.scr.impl.ComponentActorThread.run(ComponentActorThread.java:83)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"EMF Reference Cleaner" daemon prio=5 Id=30 WAITING on java.lang.ref.ReferenceQueue$Lock@1e7a06b6
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.ref.ReferenceQueue$Lock@1e7a06b6
	at java.base@17.0.8/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
	at java.base@17.0.8/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:176)
	at org.eclipse.emf.common.util.CommonUtil$1ReferenceClearingQueuePollingThread.run(CommonUtil.java:70)

"Worker-JM" prio=5 Id=32 WAITING on java.util.ArrayList@4c02c1c1
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.util.ArrayList@4c02c1c1
	at org.eclipse.core.internal.jobs.InternalWorker.run(InternalWorker.java:61)

"Gogo shell" prio=5 Id=34 WAITING on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@1a880073
	at java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
	-  waiting on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@1a880073
	at java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
	at java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
	at java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
	at java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
	at java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
	at java.base@17.0.8/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
	...

"Bundle File Closer" daemon prio=6 Id=37 WAITING on org.eclipse.osgi.framework.eventmgr.EventManager$EventThread@4c3594a5
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.osgi.framework.eventmgr.EventManager$EventThread@4c3594a5
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.getNextEvent(EventManager.java:400)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:341)

"Git Repository Closer" daemon prio=6 Id=39 WAITING on java.lang.ref.ReferenceQueue$Lock@2346423
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.ref.ReferenceQueue$Lock@2346423
	at java.base@17.0.8/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
	at java.base@17.0.8/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:176)
	at org.eclipse.egit.core.RepositoryCache$Closer.run(RepositoryCache.java:453)

"JNA Cleaner" daemon prio=6 Id=41 WAITING on java.lang.ref.ReferenceQueue$Lock@58e2a16d
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.ref.ReferenceQueue$Lock@58e2a16d
	at java.base@17.0.8/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:155)
	at java.base@17.0.8/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:176)
	at com.sun.jna.internal.Cleaner$1.run(Cleaner.java:58)

"Java indexing" daemon prio=4 Id=42 WAITING on org.eclipse.jdt.internal.core.search.indexing.IndexManager@233a99a
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.jdt.internal.core.search.indexing.IndexManager@233a99a
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.jdt.internal.core.search.processing.JobManager.indexerLoop(JobManager.java:488)
	at org.eclipse.jdt.internal.core.search.processing.JobManager$$Lambda$582/0x000000010079aee8.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=1 Id=43 RUNNABLE (in native)
	at org.eclipse.swt.internal.win32.OS.PostThreadMessage(Native Method)
	at org.eclipse.swt.widgets.Display.wakeThread(Display.java:5034)
	at org.eclipse.swt.widgets.Synchronizer.addLast(Synchronizer.java:79)
	at org.eclipse.swt.widgets.Synchronizer.asyncExec(Synchronizer.java:101)
	at org.eclipse.ui.internal.UISynchronizer.asyncExec(UISynchronizer.java:112)
	at org.eclipse.swt.widgets.Display.asyncExec(Display.java:775)
	-  locked java.lang.Class@1697f2b3
	at org.eclipse.jface.util.Throttler.throttledExec(Throttler.java:96)
	at org.eclipse.ui.internal.progress.ProgressManager.addJobInfo(ProgressManager.java:722)
	...

	Number of locked synchronizers = 1
	- java.util.concurrent.locks.ReentrantLock$NonfairSync@43f7f0d2

"EventAdmin Async Event Dispatcher Thread" daemon prio=6 Id=49 WAITING on org.eclipse.osgi.framework.eventmgr.EventManager$EventThread@ed3c808
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.osgi.framework.eventmgr.EventManager$EventThread@ed3c808
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.getNextEvent(EventManager.java:400)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:341)

"Worker-2: Process Console Input Job" prio=5 Id=51 WAITING on org.eclipse.ui.console.IOConsoleInputStream@11b3cf31
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@11b3cf31
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-5: Process Console Input Job" prio=5 Id=54 WAITING on org.eclipse.ui.console.IOConsoleInputStream@6f209d7f
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@6f209d7f
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-6: Process Console Input Job" prio=5 Id=55 WAITING on org.eclipse.ui.console.IOConsoleInputStream@132d8129
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@132d8129
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-7: Process Console Input Job" prio=5 Id=56 WAITING on org.eclipse.ui.console.IOConsoleInputStream@32e98cc
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@32e98cc
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-8: Process Console Input Job" prio=5 Id=57 WAITING on org.eclipse.ui.console.IOConsoleInputStream@c6b05df
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@c6b05df
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-9: Process Console Input Job" prio=5 Id=58 WAITING on org.eclipse.ui.console.IOConsoleInputStream@67cbaa48
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@67cbaa48
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-11: Process Console Input Job" prio=5 Id=60 WAITING on org.eclipse.ui.console.IOConsoleInputStream@18904b51
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@18904b51
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"pool-1-thread-1" prio=5 Id=63 WAITING on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@6f8f5877
	at java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
	-  waiting on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@6f8f5877
	at java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
	at java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
	at java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
	at java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
	at java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
	at java.base@17.0.8/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
	...

"pool-2-thread-1" prio=5 Id=64 WAITING on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@3b9efda4
	at java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
	-  waiting on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@3b9efda4
	at java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
	at java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
	at java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
	at java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
	at java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
	at java.base@17.0.8/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
	...

"Worker-17: Process Console Input Job" prio=5 Id=68 WAITING on org.eclipse.ui.console.IOConsoleInputStream@13d9975
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@13d9975
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-19: Process Console Input Job" prio=5 Id=70 WAITING on org.eclipse.ui.console.IOConsoleInputStream@1b6d80c0
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@1b6d80c0
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-21: Process Console Input Job" prio=5 Id=72 WAITING on org.eclipse.ui.console.IOConsoleInputStream@eb42f3a
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@eb42f3a
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-23: Process Console Input Job" prio=5 Id=74 WAITING on org.eclipse.ui.console.IOConsoleInputStream@428b9095
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@428b9095
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-25: Process Console Input Job" prio=5 Id=76 WAITING on org.eclipse.ui.console.IOConsoleInputStream@2f104f80
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@2f104f80
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-26: Process Console Input Job" prio=5 Id=77 WAITING on org.eclipse.ui.console.IOConsoleInputStream@580cb122
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@580cb122
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-29" prio=5 Id=80 TIMED_WAITING on org.eclipse.core.internal.jobs.WorkerPool@77ee98e6
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.core.internal.jobs.WorkerPool@77ee98e6
	at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:200)
	at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:242)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)

"Worker-32: Process Console Input Job" prio=5 Id=83 WAITING on org.eclipse.ui.console.IOConsoleInputStream@697fb1b6
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@697fb1b6
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-35: Process Console Input Job" prio=5 Id=86 WAITING on org.eclipse.ui.console.IOConsoleInputStream@443e9f56
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@443e9f56
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-36: Process Console Input Job" prio=5 Id=87 WAITING on org.eclipse.ui.console.IOConsoleInputStream@7906b352
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@7906b352
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Provisioning Event Dispatcher" daemon prio=5 Id=89 WAITING on org.eclipse.osgi.framework.eventmgr.EventManager$EventThread@7aac2d3c
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.osgi.framework.eventmgr.EventManager$EventThread@7aac2d3c
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.getNextEvent(EventManager.java:400)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:341)

"Output Stream Monitor for PID 2264 loginFrame" daemon prio=1 Id=90 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@6ecad1de
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 2264 loginFrame" daemon prio=1 Id=91 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@5ebe277e
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 2264 loginFrame" daemon prio=5 Id=92 WAITING on java.lang.Object@12ee93d8
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@12ee93d8
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 2264 loginFrame" daemon prio=5 Id=93 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Thread-12" prio=5 Id=96 TIMED_WAITING
	at java.base@17.0.8/java.lang.Thread.sleep(Native Method)
	at org.eclipse.equinox.internal.p2.updatechecker.UpdateChecker$UpdateCheckThread.run(UpdateChecker.java:73)

"Output Stream Monitor for PID 20380 loginFrame" daemon prio=1 Id=124 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@9308974
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 20380 loginFrame" daemon prio=1 Id=125 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@31ccfdad
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 20380 loginFrame" daemon prio=5 Id=126 WAITING on java.lang.Object@1ee6a93d
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@1ee6a93d
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 20380 loginFrame" daemon prio=5 Id=127 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 2428 loginFrame" daemon prio=1 Id=136 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@7870996a
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 2428 loginFrame" daemon prio=1 Id=137 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@7506c439
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 2428 loginFrame" daemon prio=5 Id=138 WAITING on java.lang.Object@23717ea1
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@23717ea1
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 2428 loginFrame" daemon prio=5 Id=139 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 19464 loginFrame" daemon prio=1 Id=141 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@87594b3
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 19464 loginFrame" daemon prio=1 Id=142 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@7432f71e
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 19464 loginFrame" daemon prio=5 Id=143 WAITING on java.lang.Object@3756d2ad
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@3756d2ad
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 19464 loginFrame" daemon prio=5 Id=144 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 4992 loginFrame" daemon prio=1 Id=145 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@1f7a2690
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 4992 loginFrame" daemon prio=1 Id=146 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@3b8ee9c0
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 4992 loginFrame" daemon prio=5 Id=147 WAITING on java.lang.Object@58e773a8
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@58e773a8
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 4992 loginFrame" daemon prio=5 Id=148 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 7764 loginFrame" daemon prio=1 Id=149 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@59a501a3
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 7764 loginFrame" daemon prio=1 Id=150 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@17a5f2a1
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 7764 loginFrame" daemon prio=5 Id=151 WAITING on java.lang.Object@5ba9c97c
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@5ba9c97c
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 7764 loginFrame" daemon prio=5 Id=152 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 21464 loginFrame" daemon prio=1 Id=153 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@38b08b92
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 21464 loginFrame" daemon prio=1 Id=154 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@49e93d3e
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 21464 loginFrame" daemon prio=5 Id=155 WAITING on java.lang.Object@7161ee58
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@7161ee58
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 21464 loginFrame" daemon prio=5 Id=156 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 9744 loginFrame" daemon prio=1 Id=157 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@64962b21
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 9744 loginFrame" daemon prio=1 Id=158 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@58c6d03a
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 9744 loginFrame" daemon prio=5 Id=159 WAITING on java.lang.Object@584606d1
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@584606d1
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 9744 loginFrame" daemon prio=5 Id=160 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"pool-3-thread-1" prio=5 Id=162 WAITING on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@262b30af
	at java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
	-  waiting on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@262b30af
	at java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
	at java.base@17.0.8/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3465)
	at java.base@17.0.8/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3436)
	at java.base@17.0.8/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
	at java.base@17.0.8/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
	at java.base@17.0.8/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
	...

"Output Stream Monitor for PID 4732 loginFrame" daemon prio=1 Id=223 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@7331d868
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 4732 loginFrame" daemon prio=1 Id=224 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@1d988134
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 4732 loginFrame" daemon prio=5 Id=225 WAITING on java.lang.Object@75807cd8
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@75807cd8
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 4732 loginFrame" daemon prio=5 Id=226 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 7188 loginFrame" daemon prio=1 Id=239 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@a51948f
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 7188 loginFrame" daemon prio=1 Id=240 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@77deff35
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 7188 loginFrame" daemon prio=5 Id=241 WAITING on java.lang.Object@2e9641db
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@2e9641db
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 7188 loginFrame" daemon prio=5 Id=242 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 17984 loginFrame" daemon prio=1 Id=246 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@58868e6d
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 17984 loginFrame" daemon prio=1 Id=247 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@5ef58c1e
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 17984 loginFrame" daemon prio=5 Id=248 WAITING on java.lang.Object@5e52f7a2
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@5e52f7a2
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 17984 loginFrame" daemon prio=5 Id=249 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 14948 loginFrame" daemon prio=1 Id=251 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@42d6ed2a
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 14948 loginFrame" daemon prio=1 Id=252 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@2ecfe6fb
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 14948 loginFrame" daemon prio=5 Id=253 WAITING on java.lang.Object@5ca80a40
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@5ca80a40
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 14948 loginFrame" daemon prio=5 Id=254 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 17832 loginFrame" daemon prio=1 Id=266 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@150e1990
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 17832 loginFrame" daemon prio=1 Id=267 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@60c409a6
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 17832 loginFrame" daemon prio=5 Id=268 WAITING on java.lang.Object@316dd37b
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@316dd37b
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 17832 loginFrame" daemon prio=5 Id=269 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 12604 loginFrame" daemon prio=1 Id=270 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@2d0b351c
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 12604 loginFrame" daemon prio=1 Id=271 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@482c6bb4
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 12604 loginFrame" daemon prio=5 Id=272 WAITING on java.lang.Object@865c22e
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@865c22e
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 12604 loginFrame" daemon prio=5 Id=273 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Worker-39" prio=5 Id=285 RUNNABLE
	at java.management@17.0.8/sun.management.ThreadImpl.dumpThreads0(Native Method)
	at java.management@17.0.8/sun.management.ThreadImpl.dumpAllThreads(ThreadImpl.java:521)
	at java.management@17.0.8/sun.management.ThreadImpl.dumpAllThreads(ThreadImpl.java:509)
	at org.eclipse.core.internal.jobs.JobListeners.waitAndSendEvents(JobListeners.java:120)
	at org.eclipse.core.internal.jobs.JobManager.startJob(JobManager.java:1752)
	at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:244)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)

"Worker-42: Process Console Input Job" prio=5 Id=325 WAITING on org.eclipse.ui.console.IOConsoleInputStream@574c3e52
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@574c3e52
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Output Stream Monitor for PID 10612 loginFrame" daemon prio=1 Id=337 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@239b5272
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 10612 loginFrame" daemon prio=1 Id=338 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@841fc7e
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 10612 loginFrame" daemon prio=5 Id=339 WAITING on java.lang.Object@2e133bea
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@2e133bea
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 10612 loginFrame" daemon prio=5 Id=340 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 18988 loginFrame" daemon prio=1 Id=397 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@181b2ed4
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 18988 loginFrame" daemon prio=1 Id=398 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@616af767
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 18988 loginFrame" daemon prio=5 Id=399 WAITING on java.lang.Object@66cf4538
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@66cf4538
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 18988 loginFrame" daemon prio=5 Id=400 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Worker-43: Process Console Input Job" prio=5 Id=401 WAITING on org.eclipse.ui.console.IOConsoleInputStream@51b4fe60
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@51b4fe60
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Output Stream Monitor for PID 6520 loginFrame" daemon prio=1 Id=403 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@1098170c
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 6520 loginFrame" daemon prio=1 Id=404 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@26ff0bb7
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 6520 loginFrame" daemon prio=5 Id=405 WAITING on java.lang.Object@3a857cd5
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@3a857cd5
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 6520 loginFrame" daemon prio=5 Id=406 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Worker-44: Process Console Input Job" prio=5 Id=407 WAITING on org.eclipse.ui.console.IOConsoleInputStream@4c34c21b
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@4c34c21b
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Output Stream Monitor for PID 12744 loginFrame" daemon prio=1 Id=408 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@1cc48ce6
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 12744 loginFrame" daemon prio=1 Id=409 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@42389e7a
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 12744 loginFrame" daemon prio=5 Id=410 WAITING on java.lang.Object@534a213c
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@534a213c
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 12744 loginFrame" daemon prio=5 Id=411 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Worker-45: Process Console Input Job" prio=5 Id=431 WAITING on org.eclipse.ui.console.IOConsoleInputStream@39041554
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@39041554
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-46: Process Console Input Job" prio=5 Id=438 WAITING on org.eclipse.ui.console.IOConsoleInputStream@19f0d2e
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@19f0d2e
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Output Stream Monitor for PID 12168 loginFrame" daemon prio=1 Id=440 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@7d28829
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 12168 loginFrame" daemon prio=1 Id=441 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@5931a2e
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 12168 loginFrame" daemon prio=5 Id=442 WAITING on java.lang.Object@1c24117d
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@1c24117d
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 12168 loginFrame" daemon prio=5 Id=443 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 3616 loginFrame" daemon prio=1 Id=444 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@652b89aa
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 3616 loginFrame" daemon prio=1 Id=445 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@76abd6e6
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 3616 loginFrame" daemon prio=5 Id=446 WAITING on java.lang.Object@6bf4f077
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@6bf4f077
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 3616 loginFrame" daemon prio=5 Id=447 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Worker-47: Process Console Input Job" prio=5 Id=448 WAITING on org.eclipse.ui.console.IOConsoleInputStream@57e7ab8d
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@57e7ab8d
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-48: Process Console Input Job" prio=5 Id=449 WAITING on org.eclipse.ui.console.IOConsoleInputStream@6eb80e02
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@6eb80e02
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Output Stream Monitor for PID 7276 loginFrame" daemon prio=1 Id=450 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@468ce9d5
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 7276 loginFrame" daemon prio=1 Id=451 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@a37ce3b
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 7276 loginFrame" daemon prio=5 Id=452 WAITING on java.lang.Object@6066b733
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@6066b733
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 7276 loginFrame" daemon prio=5 Id=453 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Worker-49: Open Notification Job" prio=5 Id=454 BLOCKED on java.lang.Class@1697f2b3 owned by "org.eclipse.jdt.internal.ui.text.JavaReconciler" Id=43
	at org.eclipse.swt.widgets.Display.asyncExec(Display.java:773)
	-  blocked on java.lang.Class@1697f2b3
	at org.eclipse.mylyn.internal.tasks.ui.TaskListNotificationManager$1.run(TaskListNotificationManager.java:66)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Output Stream Monitor for PID 19960 loginFrame" daemon prio=1 Id=456 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@4e807d23
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 19960 loginFrame" daemon prio=1 Id=457 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@6fe3e767
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 19960 loginFrame" daemon prio=5 Id=458 WAITING on java.lang.Object@5b11bab6
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@5b11bab6
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 19960 loginFrame" daemon prio=5 Id=459 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 13532 loginFrame" daemon prio=1 Id=468 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@e1b51c8
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 13532 loginFrame" daemon prio=1 Id=469 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@43bf5c4d
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 13532 loginFrame" daemon prio=5 Id=470 WAITING on java.lang.Object@33174382
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@33174382
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 13532 loginFrame" daemon prio=5 Id=471 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Worker-51: Process Console Input Job" prio=5 Id=472 WAITING on org.eclipse.ui.console.IOConsoleInputStream@65859b5c
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@65859b5c
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Worker-52: Process Console Input Job" prio=5 Id=473 WAITING on org.eclipse.ui.console.IOConsoleInputStream@31c40335
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.ui.console.IOConsoleInputStream@31c40335
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.ui.console.IOConsoleInputStream.waitForData(IOConsoleInputStream.java:141)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:92)
	at org.eclipse.ui.console.IOConsoleInputStream.read(IOConsoleInputStream.java:114)
	at org.eclipse.debug.internal.ui.views.console.ProcessConsole$InputReadJob.run(ProcessConsole.java:908)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

"Output Stream Monitor for PID 1508 loginFrame" daemon prio=1 Id=476 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@8a06c74
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 1508 loginFrame" daemon prio=1 Id=477 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@1a235b1
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 1508 loginFrame" daemon prio=5 Id=478 WAITING on java.lang.Object@483411a2
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@483411a2
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 1508 loginFrame" daemon prio=5 Id=479 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"Output Stream Monitor for PID 3472 loginFrame" daemon prio=1 Id=481 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@59f87e3a
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Error Stream Monitor for PID 3472 loginFrame" daemon prio=1 Id=482 RUNNABLE (in native)
	at java.base@17.0.8/java.io.FileInputStream.readBytes(Native Method)
	at java.base@17.0.8/java.io.FileInputStream.read(FileInputStream.java:276)
	at java.base@17.0.8/java.io.BufferedInputStream.read1(BufferedInputStream.java:282)
	at java.base@17.0.8/java.io.BufferedInputStream.read(BufferedInputStream.java:343)
	-  locked java.io.BufferedInputStream@52306abd
	at java.base@17.0.8/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.internalRead(OutputStreamMonitor.java:249)
	at org.eclipse.debug.internal.core.OutputStreamMonitor.read(OutputStreamMonitor.java:225)
	at org.eclipse.debug.internal.core.OutputStreamMonitor$$Lambda$1356/0x0000000100f26870.run(Unknown Source)
	...

"Input Stream Monitor for PID 3472 loginFrame" daemon prio=5 Id=483 WAITING on java.lang.Object@422fc2f7
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on java.lang.Object@422fc2f7
	at java.base@17.0.8/java.lang.Object.wait(Object.java:338)
	at org.eclipse.debug.internal.core.InputStreamMonitor.writeNext(InputStreamMonitor.java:199)
	at org.eclipse.debug.internal.core.InputStreamMonitor.write(InputStreamMonitor.java:169)
	at org.eclipse.debug.internal.core.InputStreamMonitor$$Lambda$1357/0x0000000100f26a90.run(Unknown Source)
	at java.base@17.0.8/java.lang.Thread.run(Thread.java:833)

"Process monitor for PID 3472 loginFrame" daemon prio=5 Id=484 RUNNABLE (in native)
	at java.base@17.0.8/java.lang.ProcessImpl.waitForInterruptibly(Native Method)
	at java.base@17.0.8/java.lang.ProcessImpl.waitFor(ProcessImpl.java:566)
	at org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread.run(RuntimeProcess.java:496)

"org.eclipse.jdt.internal.ui.text.JavaReconciler" daemon prio=1 Id=488 TIMED_WAITING on org.eclipse.jface.text.reconciler.DirtyRegionQueue@2afe6211
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.jface.text.reconciler.DirtyRegionQueue@2afe6211
	at org.eclipse.jface.text.reconciler.AbstractReconciler.delay(AbstractReconciler.java:572)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:181)

"ForkJoinPool.commonPool-worker-16" daemon prio=6 Id=498 TIMED_WAITING on java.util.concurrent.ForkJoinPool@30edd0da
	at java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
	-  waiting on java.util.concurrent.ForkJoinPool@30edd0da
	at java.base@17.0.8/java.util.concurrent.locks.LockSupport.parkUntil(LockSupport.java:410)
	at java.base@17.0.8/java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1726)
	at java.base@17.0.8/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1623)
	at java.base@17.0.8/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

"ForkJoinPool.commonPool-worker-17" daemon prio=6 Id=499 WAITING on java.util.concurrent.ForkJoinPool@30edd0da
	at java.base@17.0.8/jdk.internal.misc.Unsafe.park(Native Method)
	-  waiting on java.util.concurrent.ForkJoinPool@30edd0da
	at java.base@17.0.8/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
	at java.base@17.0.8/java.util.concurrent.ForkJoinPool.awaitWork(ForkJoinPool.java:1724)
	at java.base@17.0.8/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1623)
	at java.base@17.0.8/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

"Worker-55" prio=5 Id=501 TIMED_WAITING on org.eclipse.core.internal.jobs.WorkerPool@77ee98e6
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.core.internal.jobs.WorkerPool@77ee98e6
	at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:200)
	at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:242)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)

"Worker-56" prio=5 Id=502 TIMED_WAITING on org.eclipse.core.internal.jobs.WorkerPool@77ee98e6
	at java.base@17.0.8/java.lang.Object.wait(Native Method)
	-  waiting on org.eclipse.core.internal.jobs.WorkerPool@77ee98e6
	at org.eclipse.core.internal.jobs.WorkerPool.sleep(WorkerPool.java:200)
	at org.eclipse.core.internal.jobs.WorkerPool.startJob(WorkerPool.java:242)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:58)


!SESSION 2023-12-11 00:54:06.485 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-11 00:54:15.026
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-11 00:54:15.026
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-11 00:54:22.115
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-12-11 01:28:34.657 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-11 01:28:43.929
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-11 01:28:43.929
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-11 01:28:53.213
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-12-11 01:43:17.220 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-11 01:43:24.821
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-11 01:43:24.821
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-11 01:43:30.969
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2023-12-11 02:32:54.680
!MESSAGE Disconnected before saving. Please post stacktrace to https://bugs.eclipse.org/bugs/show_bug.cgi?id=569286 org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor AbstractStringBuilder.class
!STACK 0
java.lang.IllegalStateException: Disconnected before saving. Please post stacktrace to https://bugs.eclipse.org/bugs/show_bug.cgi?id=569286 org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor AbstractStringBuilder.class
	at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.disconnectEditor(AbstractTextEditor.java:7148)
	at org.eclipse.ui.texteditor.AbstractTextEditor.dispose(AbstractTextEditor.java:4329)
	at org.eclipse.ui.texteditor.AbstractDecoratedTextEditor.dispose(AbstractDecoratedTextEditor.java:383)
	at org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.dispose(JavaEditor.java:2668)
	at org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.dispose(ClassFileEditor.java:944)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.invalidate(CompatibilityPart.java:264)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.destroy(CompatibilityPart.java:421)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:987)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:952)
	at org.eclipse.e4.core.internal.di.InjectorImpl.uninject(InjectorImpl.java:193)
	at org.eclipse.e4.core.internal.di.Requestor.uninject(Requestor.java:177)
	at org.eclipse.e4.core.internal.contexts.ContextObjectSupplier$ContextInjectionListener.update(ContextObjectSupplier.java:89)
	at org.eclipse.e4.core.internal.contexts.TrackableComputationExt.update(TrackableComputationExt.java:103)
	at org.eclipse.e4.core.internal.contexts.EclipseContext.removeListenersTo(EclipseContext.java:487)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.uninject(ContextInjectionFactory.java:184)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeRemoveGui(PartRenderingEngine.java:947)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:861)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.removeGui(PartRenderingEngine.java:845)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.subscribeTopicToBeRendered(PartRenderingEngine.java:185)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$DIEventHandler.handleEvent(EventObjectSupplier.java:92)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setToBeRendered(UIElementImpl.java:314)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.hidePart(PartServiceImpl.java:1404)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.hidePart(PartServiceImpl.java:1334)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.closePart(StackRenderer.java:1317)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer$3.close(StackRenderer.java:1177)
	at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1970)
	at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:337)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4274)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3660)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	Suppressed: java.lang.IllegalStateException: isDirty check after disconnect
		at org.eclipse.ui.texteditor.AbstractTextEditor$TextEditorSavable.isDirty(AbstractTextEditor.java:7197)
		at org.eclipse.ui.internal.Workbench.getFilteredSaveables(Workbench.java:3431)
		at org.eclipse.ui.internal.Workbench.saveAll(Workbench.java:3404)
		at org.eclipse.ui.ide.IDE$1.run(IDE.java:1458)
		at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
		at org.eclipse.ui.ide.IDE.saveAllEditors(IDE.java:1446)
		at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.doSave(SaveScopeResourcesHandler.java:228)
		at org.eclipse.debug.internal.ui.launchConfigurations.SaveScopeResourcesHandler.handleStatus(SaveScopeResourcesHandler.java:182)
		at org.eclipse.debug.internal.ui.sourcelookup.Prompter.lambda$0(Prompter.java:73)
		at org.eclipse.ui.internal.PendingSyncExec.run(PendingSyncExec.java:68)
		at org.eclipse.ui.internal.UILockListener.doPendingWork(UILockListener.java:172)
		at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
		at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:132)
		at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4047)
		at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3663)
		... 21 more
!SESSION 2023-12-11 14:14:18.795 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-11 14:14:28.853
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-11 14:14:28.853
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-11 14:14:36.793
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-12-11 14:28:45.962 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-11 14:28:51.340
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-11 14:28:51.340
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-11 14:28:55.668
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-12-11 14:34:57.585 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-11 14:35:30.330
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-11 14:35:30.330
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-11 14:35:36.877
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 15:38:30.195
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        JPanel ttPanel = new JPanel(new GridLayout(27, 5));
        
        for (subject course : selected) {
            JLabel label = new JLabel(course.getSub_name());
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label, index_Selected());  
        }
        
        for(int i=0; i<27*5; i++) {	
            JLabel label = new JLabel(Integer.toString(i));
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        
        /*
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    
    public int index_Selected()
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15, 18, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18, 21, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16, 17, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17, 18, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10, 11, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11, 12, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15, 16, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16, 17, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17, 18, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18, 19, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17, 18, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18, 19, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12, 13, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11, 12, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13, 16, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13, 16, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9, 12, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13, 16, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9, 12, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19, 22, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9, 12, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16, 17, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10, 11, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11, 12, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18, 19, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3388)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-12-11 15:38:30.374
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3388)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-12-11 15:38:30.397
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3388)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:725)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 16:20:08.875
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        JPanel ttPanel = new JPanel(new GridLayout(27, 5));
        /*
        for (subject course : selected) {
            JLabel label = new JLabel(course.getSub_name());
            label.setBorder(new LineBorder(Color.BLACK));
            
            
            ttPanel.add(label, course.getDay()  getindex_Selected(course));  
        }
        */
        
        (((int)(selected[index].getStartTime() - 9)*2))
        
        int index=0;
        for(int i=0; i<27*5; i++) {
        	if(i == ( (((int)(selected[index].getStartTime() - 9)*2)) * 5 + selected[index].getDay()) ) {
                JLabel label = new JLabel(selected[index++].getSub_name());
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}

        }

        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15, 18, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18, 21, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16, 17, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17, 18, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10, 11, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11, 12, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15, 16, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16, 17, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17, 18, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18, 19, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17, 18, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18, 19, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12, 13, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11, 12, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13, 16, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13, 16, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9, 12, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13, 16, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9, 12, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19, 22, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9, 12, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16, 17, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10, 11, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11, 12, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18, 19, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-12-11 16:20:09.101
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-12-11 16:20:09.124
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 16:20:12.613
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        JPanel ttPanel = new JPanel(new GridLayout(27, 5));
        /*
        for (subject course : selected) {
            JLabel label = new JLabel(course.getSub_name());
            label.setBorder(new LineBorder(Color.BLACK));
            
            
            ttPanel.add(label, course.getDay()  getindex_Selected(course));  
        }
        */
        
        (((int)(selected[index].getStartTime() - 9)*2 ))
        
        int index=0;
        for(int i=0; i<27*5; i++) {
        	if(i == ( (((int)(selected[index].getStartTime() - 9)*2)) * 5 + selected[index].getDay()) ) {
                JLabel label = new JLabel(selected[index++].getSub_name());
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}

        }

        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15, 18, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18, 21, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16, 17, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17, 18, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10, 11, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11, 12, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15, 16, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16, 17, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17, 18, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18, 19, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17, 18, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18, 19, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12, 13, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11, 12, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13, 16, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13, 16, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9, 12, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13, 16, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9, 12, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19, 22, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9, 12, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16, 17, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10, 11, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11, 12, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18, 19, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-12-11 16:20:12.724
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-12-11 16:20:12.762
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 16:20:17.065
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        JPanel ttPanel = new JPanel(new GridLayout(27, 5));
        /*
        for (subject course : selected) {
            JLabel label = new JLabel(course.getSub_name());
            label.setBorder(new LineBorder(Color.BLACK));
            
            
            ttPanel.add(label, course.getDay()  getindex_Selected(course));  
        }
        */
        
        (((int) (selected[index].getStartTime() - 9)*2 ))
        
        int index=0;
        for(int i=0; i<27*5; i++) {
        	if(i == ( (((int)(selected[index].getStartTime() - 9)*2)) * 5 + selected[index].getDay()) ) {
                JLabel label = new JLabel(selected[index++].getSub_name());
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}

        }

        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15, 18, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18, 21, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16, 17, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17, 18, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10, 11, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11, 12, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15, 16, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16, 17, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17, 18, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18, 19, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17, 18, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18, 19, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12, 13, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11, 12, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13, 16, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13, 16, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9, 12, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13, 16, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9, 12, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19, 22, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9, 12, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16, 17, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10, 11, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11, 12, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18, 19, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-12-11 16:20:17.173
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-12-11 16:20:17.213
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 16:20:20.796
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        JPanel ttPanel = new JPanel(new GridLayout(27, 5));
        /*
        for (subject course : selected) {
            JLabel label = new JLabel(course.getSub_name());
            label.setBorder(new LineBorder(Color.BLACK));
            
            
            ttPanel.add(label, course.getDay()  getindex_Selected(course));  
        }
        */
        
        (((int) (selected[index].getStartTime() - 9)*2 ))
        
        int index=0;
        for(int i=0; i<27*5; i++) {
        	if(i == ( (((int)(selected[index].getStartTime() - 9)*2)) * 5 + selected[index].getDay()) ) {
                JLabel label = new JLabel(selected[index++].getSub_name());
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}

        }

        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15, 18, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18, 21, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16, 17, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17, 18, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10, 11, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11, 12, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15, 16, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16, 17, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17, 18, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18, 19, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17, 18, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18, 19, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12, 13, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11, 12, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13, 16, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13, 16, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9, 12, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13, 16, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9, 12, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19, 22, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9, 12, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16, 17, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10, 11, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11, 12, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18, 19, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-11 16:20:20.840
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-11 16:20:20.878
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 17:02:23.003
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index=0;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        JPanel ttPanel = new JPanel(new GridLayout(27, 5));
        
        for(subject tmp:selected) {
        	
        }((int)((selected[index].getStartTime()-9)*2)) * 9 + selected[index].getDay()   )
        
        /*
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 9 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel(Integer.toString(i));
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
         */

        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-12-11 17:02:23.055
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-12-11 17:02:23.076
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 17:02:24.794
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index=0;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        JPanel ttPanel = new JPanel(new GridLayout(27, 5));
        
        for(subject tmp:selected) {
        	((int)((selected[index].getStartTime()-9)*2)) * 9 + selected[index].getDay()   )
        }
        
        /*
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 9 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel(Integer.toString(i));
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
         */

        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-12-11 17:02:24.908
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-12-11 17:02:24.930
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 17:02:35.650
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index=0;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        JPanel ttPanel = new JPanel(new GridLayout(27, 5));
        
        for(subject tmp:selected) {
        ((int)((selected[index].getStartTime()-9)*2)) * 9 + selected[index].getDay()   )
        }
        
        /*
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 9 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel(Integer.toString(i));
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
         */

        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-12-11 17:02:35.785
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-12-11 17:02:35.806
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 17:02:36.774
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index=0;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        JPanel ttPanel = new JPanel(new GridLayout(27, 5));
        
        for(subject tmp:selected) {
        
        	((int)((selected[index].getStartTime()-9)*2)) * 9 + selected[index].getDay()   )
        }
        
        /*
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 9 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel(Integer.toString(i));
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
         */

        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-12-11 17:02:36.900
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-12-11 17:02:36.925
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 18:22:38.964
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index;
	private JPanel topPanel;
	private JPanel ttPanel;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        ttPanel = new JPanel(new GridLayout(27, 5));
        
        Arrays.sort(selected, Comparator
                .comparingInt(subject::getDay)
                .thenComparingDouble(subject::getStartTime));
        
        Arrays.sort(selected, Comparator
                .comparingDouble(subject::getStartTime)
                .thenComparingInt(subject::getDay));
        
        
        for(int i=0; i<selected.length; i++) {
        	System.out.println(selected[i].getSub_name());
        }
        for(subject tmp:selected) {
        	System.out.println(tmp.getSub_name());
        }
        
        // 배치한거고
        index=0;
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(selected[index].getSub_name() + "/"+ index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel(Integer.toString(i));
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
        
        //색칠
        for(subject course:selected) {
        	((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   )
        }
        setLabelRangeBackgroundColor(12, 3, Color.RED);
        
        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    private void setLabelRangeBackgroundColor(int startIndex, int rowCount, Color color) {
        Component[] components = ttPanel.getComponents();

        for (int i = 0; i < rowCount; i++) {
            int targetIndex = startIndex + i * 5;  // 5는 예시 그리드의 행 수

            if (targetIndex >= 0 && targetIndex < components.length && components[targetIndex] instanceof JLabel) {
                JLabel label = (JLabel) components[targetIndex];
                label.setOpaque(true);
                label.setBackground(color);
            }
        }
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-12-11 18:22:39.220
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-12-11 18:22:39.241
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 18:22:42.320
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index;
	private JPanel topPanel;
	private JPanel ttPanel;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        ttPanel = new JPanel(new GridLayout(27, 5));
        
        Arrays.sort(selected, Comparator
                .comparingInt(subject::getDay)
                .thenComparingDouble(subject::getStartTime));
        
        Arrays.sort(selected, Comparator
                .comparingDouble(subject::getStartTime)
                .thenComparingInt(subject::getDay));
        
        
        for(int i=0; i<selected.length; i++) {
        	System.out.println(selected[i].getSub_name());
        }
        for(subject tmp:selected) {
        	System.out.println(tmp.getSub_name());
        }
        
        // 배치한거고
        index=0;
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(selected[index].getSub_name() + "/"+ index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel(Integer.toString(i));
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
        
        //색칠
        for(subject course:selected) {
        	((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   )
        }
        setLabelRangeBackgroundColor(12, 3, Color.RED);
        
        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    private void setLabelRangeBackgroundColor(int startIndex, int rowCount, Color color) {
        Component[] components = ttPanel.getComponents();

        for (int i = 0; i < rowCount; i++) {
            int targetIndex = startIndex + i * 5;  // 5는 예시 그리드의 행 수

            if (targetIndex >= 0 && targetIndex < components.length && components[targetIndex] instanceof JLabel) {
                JLabel label = (JLabel) components[targetIndex];
                label.setOpaque(true);
                label.setBackground(color);
            }
        }
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-11 18:22:42.372
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-11 18:22:42.400
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 18:22:45.453
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index;
	private JPanel topPanel;
	private JPanel ttPanel;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        ttPanel = new JPanel(new GridLayout(27, 5));
        
        Arrays.sort(selected, Comparator
                .comparingInt(subject::getDay)
                .thenComparingDouble(subject::getStartTime));
        
        Arrays.sort(selected, Comparator
                .comparingDouble(subject::getStartTime)
                .thenComparingInt(subject::getDay));
        
        
        for(int i=0; i<selected.length; i++) {
        	System.out.println(selected[i].getSub_name());
        }
        for(subject tmp:selected) {
        	System.out.println(tmp.getSub_name());
        }
        
        // 배치한거고
        index=0;
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(selected[index].getSub_name() + "/"+ index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel(Integer.toString(i));
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
        
        //색칠
        for(subject course:selected) {
        	((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   )
        }
        setLabelRangeBackgroundColor(12, 3, Color.RED);
        
        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    private void setLabelRangeBackgroundColor(int startIndex, int rowCount, Color color) {
        Component[] components = ttPanel.getComponents();

        for (int i = 0; i < rowCount; i++) {
            int targetIndex = startIndex + i * 5;  // 5는 예시 그리드의 행 수

            if (targetIndex >= 0 && targetIndex < components.length && components[targetIndex] instanceof JLabel) {
                JLabel label = (JLabel) components[targetIndex];
                label.setOpaque(true);
                label.setBackground(color);
            }
        }
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-11 18:22:45.501
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-11 18:22:45.542
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 18:22:47.539
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index;
	private JPanel topPanel;
	private JPanel ttPanel;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        ttPanel = new JPanel(new GridLayout(27, 5));
        
        Arrays.sort(selected, Comparator
                .comparingInt(subject::getDay)
                .thenComparingDouble(subject::getStartTime));
        
        Arrays.sort(selected, Comparator
                .comparingDouble(subject::getStartTime)
                .thenComparingInt(subject::getDay));
        
        
        for(int i=0; i<selected.length; i++) {
        	System.out.println(selected[i].getSub_name());
        }
        for(subject tmp:selected) {
        	System.out.println(tmp.getSub_name());
        }
        
        // 배치한거고
        index=0;
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(selected[index].getSub_name() + "/"+ index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel(Integer.toString(i));
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
        
        //색칠
        for(subject course:selected) {
        	((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   )
        }
        setLabelRangeBackgroundColor(12, 3, Color.RED);
        
        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    private void setLabelRangeBackgroundColor(int startIndex, int rowCount, Color color) {
        Component[] components = ttPanel.getComponents();

        for (int i = 0; i < rowCount; i++) {
            int targetIndex = startIndex + i * 5;  // 5는 예시 그리드의 행 수

            if (targetIndex >= 0 && targetIndex < components.length && components[targetIndex] instanceof JLabel) {
                JLabel label = (JLabel) components[targetIndex];
                label.setOpaque(true);
                label.setBackground(color);
            }
        }
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-11 18:22:47.618
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-11 18:22:47.640
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 18:23:40.382
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index;
	private JPanel topPanel;
	private JPanel ttPanel;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        ttPanel = new JPanel(new GridLayout(27, 5));
        
        Arrays.sort(selected, Comparator
                .comparingInt(subject::getDay)
                .thenComparingDouble(subject::getStartTime));
        
        Arrays.sort(selected, Comparator
                .comparingDouble(subject::getStartTime)
                .thenComparingInt(subject::getDay));
        
        
        for(int i=0; i<selected.length; i++) {
        	System.out.println(selected[i].getSub_name());
        }
        for(subject tmp:selected) {
        	System.out.println(tmp.getSub_name());
        }
        
        // 배치한거고
        index=0;
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(selected[index].getSub_name() + "/"+ index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel(Integer.toString(i));
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
        
        //색칠
        for(subject course:selected) {
        	((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   )
        }
        setLabelRangeBackgroundColor(12, 3, Color.RED);
        
        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    private void setLabelRangeBackgroundColor(int startIndex, int rowCount, Color color) {
        Component[] components = ttPanel.getComponents();

        for (int i = 0; i < rowCount; i++) {
            int targetIndex = startIndex + i * 5;  // 5는 예시 그리드의 행 수

            if (targetIndex >= 0 && targetIndex < components.length && components[targetIndex] instanceof JLabel) {
                JLabel label = (JLabel) components[targetIndex];
                label.setOpaque(true);
                label.setBackground(color);
            }
        }
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor54.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-11 18:23:40.553
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor54.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-11 18:23:40.596
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor54.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 18:23:41.243
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index;
	private JPanel topPanel;
	private JPanel ttPanel;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        ttPanel = new JPanel(new GridLayout(27, 5));
        
        Arrays.sort(selected, Comparator
                .comparingInt(subject::getDay)
                .thenComparingDouble(subject::getStartTime));
        
        Arrays.sort(selected, Comparator
                .comparingDouble(subject::getStartTime)
                .thenComparingInt(subject::getDay));
        
        
        for(int i=0; i<selected.length; i++) {
        	System.out.println(selected[i].getSub_name());
        }
        for(subject tmp:selected) {
        	System.out.println(tmp.getSub_name());
        }
        
        // 배치한거고
        index=0;
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(selected[index].getSub_name() + "/"+ index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel(Integer.toString(i));
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
        
        //색칠
        for(subject course:selected) {
        	((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   )
        }
        setLabelRangeBackgroundColor(12, 3, Color.RED);
        
        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    private void setLabelRangeBackgroundColor(int startIndex, int rowCount, Color color) {
        Component[] components = ttPanel.getComponents();

        for (int i = 0; i < rowCount; i++) {
            int targetIndex = startIndex + i * 5;  // 5는 예시 그리드의 행 수

            if (targetIndex >= 0 && targetIndex < components.length && components[targetIndex] instanceof JLabel) {
                JLabel label = (JLabel) components[targetIndex];
                label.setOpaque(true);
                label.setBackground(color);
            }
        }
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-11 18:23:41.292
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-11 18:23:41.313
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 18:23:41.886
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index;
	private JPanel topPanel;
	private JPanel ttPanel;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        ttPanel = new JPanel(new GridLayout(27, 5));
        
        Arrays.sort(selected, Comparator
                .comparingInt(subject::getDay)
                .thenComparingDouble(subject::getStartTime));
        
        Arrays.sort(selected, Comparator
                .comparingDouble(subject::getStartTime)
                .thenComparingInt(subject::getDay));
        
        
        for(int i=0; i<selected.length; i++) {
        	System.out.println(selected[i].getSub_name());
        }
        for(subject tmp:selected) {
        	System.out.println(tmp.getSub_name());
        }
        
        // 배치한거고
        index=0;
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(selected[index].getSub_name() + "/"+ index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel(Integer.toString(i));
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
        
        //색칠
        for(subject course:selected) {
            setLabelRangeBackgroundColor(12, 3, Color.RED);
        	((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   )
        }
        setLabelRangeBackgroundColor(12, 3, Color.RED);
        
        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    private void setLabelRangeBackgroundColor(int startIndex, int rowCount, Color color) {
        Component[] components = ttPanel.getComponents();

        for (int i = 0; i < rowCount; i++) {
            int targetIndex = startIndex + i * 5;  // 5는 예시 그리드의 행 수

            if (targetIndex >= 0 && targetIndex < components.length && components[targetIndex] instanceof JLabel) {
                JLabel label = (JLabel) components[targetIndex];
                label.setOpaque(true);
                label.setBackground(color);
            }
        }
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-12-11 18:23:42.081
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-12-11 18:23:42.103
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 18:23:46.414
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index;
	private JPanel topPanel;
	private JPanel ttPanel;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        ttPanel = new JPanel(new GridLayout(27, 5));
        
        Arrays.sort(selected, Comparator
                .comparingInt(subject::getDay)
                .thenComparingDouble(subject::getStartTime));
        
        Arrays.sort(selected, Comparator
                .comparingDouble(subject::getStartTime)
                .thenComparingInt(subject::getDay));
        
        
        for(int i=0; i<selected.length; i++) {
        	System.out.println(selected[i].getSub_name());
        }
        for(subject tmp:selected) {
        	System.out.println(tmp.getSub_name());
        }
        
        // 배치한거고
        index=0;
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(selected[index].getSub_name() + "/"+ index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel(Integer.toString(i));
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel(Integer.toString(i));
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
        
        //색칠
        for(subject course:selected) {
            setLabelRangeBackgroundColor(12, 3, Color.RED);
        	((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   )
        }
        setLabelRangeBackgroundColor(12, 3, Color.RED);
        
        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    private void setLabelRangeBackgroundColor(int startIndex, int rowCount, Color color) {
        Component[] components = ttPanel.getComponents();

        for (int i = 0; i < rowCount; i++) {
            int targetIndex = startIndex + i * 5;  // 5는 예시 그리드의 행 수

            if (targetIndex >= 0 && targetIndex < components.length && components[targetIndex] instanceof JLabel) {
                JLabel label = (JLabel) components[targetIndex];
                label.setOpaque(true);
                label.setBackground(color);
            }
        }
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 20.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17, 18, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11, 12, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12, 13, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18, 19, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15, 17, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17, 19, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12, 14, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor54.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-11 18:23:46.468
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor54.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-11 18:23:46.504
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor54.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 18:49:49.781
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index;
	private JPanel topPanel;
	private JPanel ttPanel;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(1000, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        ttPanel = new JPanel(new GridLayout(27, 5));
        
        //빈라벨 부착
        for(int i=0; i<27*5; i++) {
            JLabel label = new JLabel();
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);
        }
        
        //selected내용 삽입&색칠
        for(subject course:selected) {
        	setLabelText((((int)((course.getStartTime()-9)*2)) * 5 + course.getDay()), newText);
        	(((int)((course.getStartTime()-9)*2)) * 5 + course.getDay())
            setLabelRangeBackgroundColor((((int)((course.getStartTime()-9)*2)) * 5 + course.getDay()), ((int)( (course.getEndTime()-course.getStartTime()) * 2)), Color.LIGHT_GRAY);
        }
        
        /*
        //정렬
        Arrays.sort(selected, Comparator
                .comparingInt(subject::getDay)
                .thenComparingDouble(subject::getStartTime));
        
        Arrays.sort(selected, Comparator
                .comparingDouble(subject::getStartTime)
                .thenComparingInt(subject::getDay));
        
        // 배치
        index=0;
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name() + "/"+ selected[index].getStartTime() + "~"+ selected[index].getEndTime());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(selected[index].getSub_name() + "/"+ index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel();
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel();
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
        */
        //색칠

        
        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    private void setLabelText(int index, String newText) {
        Component[] components = ttPanel.getComponents();

        if (index >= 0 && index < components.length && components[index] instanceof JLabel) {
            JLabel label = (JLabel) components[index];
            label.setText(newText);
        }
    }
    private void setLabelRangeBackgroundColor(int startIndex, int rowCount, Color color) {
        Component[] components = ttPanel.getComponents();

        for (int i = 0; i < rowCount; i++) {
            int targetIndex = startIndex + i * 5;  // 5는 예시 그리드의 행 수

            if (targetIndex >= 0 && targetIndex < components.length && components[targetIndex] instanceof JLabel) {
                JLabel label = (JLabel) components[targetIndex];
                label.setOpaque(true);
                label.setBackground(color);
            }
        }
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 21.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18.0, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18.0, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15.0, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15.0, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12.0, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18.0, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15.0, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15.0, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12.0, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12.0, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12.0, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18.0, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18.0, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18.0, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15.0, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15.0, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21.0, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12.0, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15.0, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17.0, 18.0, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11.0, 12.0, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12.0, 13.0, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18.0, 19.0, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18.0, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15.0, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18.0, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15.0, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21.0, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18.0, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12.0, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15.0, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18.0, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15.0, 17.0, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17.0, 19.0, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12.0, 14.0, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-12-11 18:49:50.054
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-12-11 18:49:50.099
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 18:49:59.655
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private ttGenerator tt = new ttGenerator();
	
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private int index;
	private JPanel topPanel;
	private JPanel ttPanel;
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(1000, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        ttPanel = new JPanel(new GridLayout(27, 5));
        
        //빈라벨 부착
        for(int i=0; i<27*5; i++) {
            JLabel label = new JLabel();
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);
        }
        
        //selected내용 삽입&색칠
        for(subject course:selected) {
        	setLabelText((((int)((course.getStartTime()-9)*2)) * 5 + course.getDay()), course.getSub_name());
        	(((int)((course.getStartTime()-9)*2)) * 5 + course.getDay())
            setLabelRangeBackgroundColor((((int)((course.getStartTime()-9)*2)) * 5 + course.getDay()), ((int)( (course.getEndTime()-course.getStartTime()) * 2)), Color.LIGHT_GRAY);
        }
        
        /*
        //정렬
        Arrays.sort(selected, Comparator
                .comparingInt(subject::getDay)
                .thenComparingDouble(subject::getStartTime));
        
        Arrays.sort(selected, Comparator
                .comparingDouble(subject::getStartTime)
                .thenComparingInt(subject::getDay));
        
        // 배치
        index=0;
        for(int i=0; i<27*5; i++) {
        	if(index < selected.length) { //selected크기 내에서는 체크
            	if(i == (    ((int)((selected[index].getStartTime()-9)*2)) * 5 + selected[index].getDay()   ) ) {
                    JLabel label = new JLabel(selected[index].getSub_name() + "/"+ selected[index].getStartTime() + "~"+ selected[index].getEndTime());
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
                    System.out.println(selected[index].getSub_name() + "/"+ index + "부착");
                    index++;
                    System.out.println(selected.length + "selected의 길이" + index + "index의 크기");
            	}
            	else {
                    System.out.println(selected.length + " selected의 길이 " + index + " index의 크기 예외");
                    JLabel label = new JLabel();
                    label.setBorder(new LineBorder(Color.BLACK));
                    ttPanel.add(label);
            	}
        	}
        	else {
                JLabel label = new JLabel();
                label.setBorder(new LineBorder(Color.BLACK));
                ttPanel.add(label);
        	}
        }
        */
        //색칠

        
        /* 이게 걍 출력하는 원래꺼
        for (subject course : selected) {
        	String content = course.getSub_name() + "/" + course.getClassname() + "/" + course.getStartTime() + "~" + course.getEndTime();
            JLabel label = new JLabel(content);
            label.setBorder(new LineBorder(Color.BLACK));
            ttPanel.add(label);  
        }
        */

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(ttPanel, BorderLayout.CENTER);
        setContentPane(panel);
    }
    private void setLabelText(int index, String newText) {
        Component[] components = ttPanel.getComponents();

        if (index >= 0 && index < components.length && components[index] instanceof JLabel) {
            JLabel label = (JLabel) components[index];
            label.setText(newText);
        }
    }
    private void setLabelRangeBackgroundColor(int startIndex, int rowCount, Color color) {
        Component[] components = ttPanel.getComponents();

        for (int i = 0; i < rowCount; i++) {
            int targetIndex = startIndex + i * 5;  // 5는 예시 그리드의 행 수

            if (targetIndex >= 0 && targetIndex < components.length && components[targetIndex] instanceof JLabel) {
                JLabel label = (JLabel) components[targetIndex];
                label.setOpaque(true);
                label.setBackground(color);
            }
        }
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공학관"),
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미래관"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공학관"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐구관"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공학관"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공학관"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미래관"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공학관"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공학관")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상상관"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공학관"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상상관"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공학관"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상상관"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공학관")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공학관"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상상관"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공학관"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공학관"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공학관"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공학관"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 21.0, "유상미", "공학관")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상상관"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상상관"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상상관")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상상관"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상상관")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공학관"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공학관"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공학관"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공학관"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공학관"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공학관")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공학관"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공학관"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상상관"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공학관"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공학관")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상상관"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상상관"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공학관")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공학관"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공학관"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공학관")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18.0, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18.0, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15.0, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15.0, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12.0, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18.0, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15.0, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15.0, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12.0, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12.0, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12.0, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18.0, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18.0, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18.0, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15.0, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15.0, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21.0, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12.0, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15.0, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17.0, 18.0, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11.0, 12.0, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12.0, 13.0, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18.0, 19.0, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18.0, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15.0, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18.0, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15.0, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21.0, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18.0, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12.0, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15.0, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18.0, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15.0, 17.0, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17.0, 19.0, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12.0, 14.0, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-12-11 18:49:59.885
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-12-11 18:49:59.911
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 20:29:58.938
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private JTabbedPane tabbed;
	private ttGenerator tt = new ttGenerator();
	
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private JPanel topPanel;
	private JPanel ttPanel[];
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(800, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        tabbed = new JTabbedPane();

        ttPanel = new JPanel[3];
        for(int index=0; index<ttPanel.length; index++) {
        	
            ttPanel[index] = new JPanel(new GridLayout(27, 5));
            ttPanel[index].setBorder(new LineBorder(Color.BLACK));
            
            //빈라벨 부착
            for(int i=0; i<27*5; i++) {
                JLabel label = new JLabel();
                ttPanel[index].add(label);
            }
            
            //selected내용 삽입&색칠
            for(subject course:selected) {
            	setLabelText(ttPanel[index] , (((int)((course.getStartTime()-9)*2)) * 5 + course.getDay()), course.getSub_name()+ "[" + course.getClassname()+"]");
            	setLabelText(ttPanel[index](((int)((course.getStartTime()-9)*2) +1) * 5 + course.getDay()), course.getClassroom() + "/" + course.getStartTime()+"~"+course.getEndTime());        	
                setLabelRangeBackgroundColor((((int)((course.getStartTime()-9)*2)) * 5 + course.getDay()), ((int)( (course.getEndTime()-course.getStartTime()) * 2)), getRandomColor());
            }
            
            tabbed.addTab(index+"번", ttPanel[index]);
        }

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(tabbed, BorderLayout.CENTER);
        setContentPane(panel);
    }
    
    public Color getRandomColor () {
    	Random random = new Random();
    	Color randomColor = new Color(random.nextInt(256), random.nextInt(256), random.nextInt(256));
    	return randomColor;
    }
    
    public void setLabelText(JPanel ttPanel, int index, String newText) {
        Component[] components = ttPanel.getComponents();

        if (index >= 0 && index < components.length && components[index] instanceof JLabel) {
            JLabel label = (JLabel) components[index];
            label.setText(newText);
        }
    }
    
    public void setLabelRangeBackgroundColor(JPanel ttPanel, int startIndex, int rowCount, Color color) {
        Component[] components = ttPanel.getComponents();

        for (int i = 0; i < rowCount; i++) {
            int targetIndex = startIndex + i * 5;

            if (targetIndex >= 0 && targetIndex < components.length && components[targetIndex] instanceof JLabel) {
                JLabel label = (JLabel) components[targetIndex];
                label.setOpaque(true);
                label.setBackground(color);
            }
        }
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미B104"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공201"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐203"),
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공201"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공309"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공202"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미B104"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공309"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공201")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상203"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공305"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상203"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상203"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상203"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공305"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상203"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공305")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공309"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상306"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상306"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공201"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공202"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공202"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공202"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 21.0, "유상미", "공201")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상607"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상607"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상602"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상607")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상203"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상203")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공102"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공309"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공101"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공102"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공101"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공101"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공309")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공201"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공309"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상606"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공201"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공201"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공309")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상306"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상306"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공102")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공202"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공202"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공202"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공202")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18.0, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18.0, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15.0, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15.0, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12.0, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18.0, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15.0, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15.0, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12.0, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12.0, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12.0, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18.0, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18.0, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18.0, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15.0, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15.0, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21.0, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12.0, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15.0, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17.0, 18.0, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11.0, 12.0, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12.0, 13.0, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18.0, 19.0, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18.0, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15.0, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18.0, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15.0, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21.0, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18.0, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12.0, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15.0, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18.0, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15.0, 17.0, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17.0, 19.0, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12.0, 14.0, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3100)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-12-11 20:29:59.367
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3100)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-12-11 20:29:59.405
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3100)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-11 20:30:00.953
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.util.List;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.border.LineBorder;

public class TimetableFrame extends JFrame {
	private JTabbedPane tabbed;
	private ttGenerator tt = new ttGenerator();
	
	private subject[] selected;
	private subject[] 객지;
	private subject[] 데통;
	private subject[] 선대;
	private subject[] 알고;
	private subject[] 오소;
	private subject[] 모스시;
	private subject[] 웹프;
	private subject[] 빅데;
	private subject[] 겜그;
	
	private subject[] 시프;
	private subject[] 설패;
	private subject[] 네프;
	private subject[] 비젼;
	private subject[] 고모프;
	private subject[] 웹크;
	private subject[] 데베;
	private subject[] 가상;
	
	private JPanel topPanel;
	private JPanel ttPanel[];
	
    public TimetableFrame(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("생성시작");
    	init_courseArray(selectedCourses, selectedYear);
    	make_tt(selectedCourses, timeOfDay, selectedYear);
    	
    	setTitle("시간표");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(800, 400);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        
        topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel timeLabel = new JLabel("수업 시간: " + timeOfDay);
        topPanel.add(timeLabel);
        JLabel yearLabel = new JLabel("선택된 학년: " + selectedYear);
        topPanel.add(yearLabel);
        
        tabbed = new JTabbedPane();

        ttPanel = new JPanel[3];
        for(int index=0; index<ttPanel.length; index++) {
        	
            ttPanel[index] = new JPanel(new GridLayout(27, 5));
            ttPanel[index].setBorder(new LineBorder(Color.BLACK));
            
            //빈라벨 부착
            for(int i=0; i<27*5; i++) {
                JLabel label = new JLabel();
                ttPanel[index].add(label);
            }
            
            //selected내용 삽입&색칠
            for(subject course:selected) {
            	setLabelText(ttPanel[index] , (((int)((course.getStartTime()-9)*2)) * 5 + course.getDay()), course.getSub_name()+ "[" + course.getClassname()+"]");
            	setLabelText(ttPanel[index](((int)((course.getStartTime()-9)*2) +1) * 5 + course.getDay()), course.getClassroom() + "/" + course.getStartTime()+"~"+course.getEndTime());        	
                setLabelRangeBackgroundColor((((int)((course.getStartTime()-9)*2)) * 5 + course.getDay()), ((int)( (course.getEndTime()-course.getStartTime()) * 2)), getRandomColor());
            }
            
            tabbed.addTab(index+"번", ttPanel[index]);
        }

        panel.add(topPanel, BorderLayout.NORTH);
        panel.add(tabbed, BorderLayout.CENTER);
        setContentPane(panel);
    }
    
    public Color getRandomColor () {
    	Random random = new Random();
    	Color randomColor = new Color(random.nextInt(256), random.nextInt(256), random.nextInt(256));
    	return randomColor;
    }
    
    public void setLabelText(JPanel ttPanel, int index, String newText) {
        Component[] components = ttPanel.getComponents();

        if (index >= 0 && index < components.length && components[index] instanceof JLabel) {
            JLabel label = (JLabel) components[index];
            label.setText(newText);
        }
    }
    
    public void setLabelRangeBackgroundColor(JPanel ttPanel, int startIndex, int rowCount, Color color) {
        Component[] components = ttPanel.getComponents();

        for (int i = 0; i < rowCount; i++) {
            int targetIndex = startIndex + i * 5;

            if (targetIndex >= 0 && targetIndex < components.length && components[targetIndex] instanceof JLabel) {
                JLabel label = (JLabel) components[targetIndex];
                label.setOpaque(true);
                label.setBackground(color);
            }
        }
    }
    
    public void init_courseArray(List<String> selectedCourses, String selectedYear) {
    	System.out.println("학년에 맞는 과목들 초기화 시작");
    	selected = new subject[selectedCourses.size()];
    	
    	switch(selectedYear) {
    	case "2학년":
    		객지 = new subject[]{
    				new subject(1, "객체지향언어2", "7", 2, 13.5, 16.5, "황기태", "미B104"),
    				new subject(1, "객체지향언어2", "8", 2, 16.5, 18.0, "유상미", "공201"),
    				new subject(1, "객체지향언어2", "9", 0, 13.5, 15.0, "이찬수", "탐203"),
    				new subject(1, "객체지향언어2", "0", 4, 15.0, 18.0, "김의찬", "공201"),
    				new subject(0, "객체지향언어2", "A", 0, 13.5, 15.0, "김진환", "공309"),
    				new subject(0, "객체지향언어2", "B", 3, 16.5, 18.0, "유상미", "공202"),
    				new subject(0, "객체지향언어2", "C", 2, 10.5, 12.0, "황기태", "미B104"),
    				new subject(2, "객체지향언어2", "N", 0, 18.0, 19.5, "김진환", "공309"),
    				new subject(2, "객체지향언어2", "O", 4, 18.0, 21.0, "김의찬", "공201")
    		};
    		데통 = new subject[]{
    				new subject(1, "데이터통신", "7", 4, 16.0, 17.0, "황호영", "상203"),
    				new subject(1, "데이터통신", "8", 1, 17.0, 18.0, "김동욱", "공305"),
    				new subject(0, "데이터통신", "A", 4, 10.0, 11.0, "황호영", "상203"),
    				new subject(0, "데이터통신", "B", 4, 11.0, 12.0, "황호영", "상203"),
    				new subject(0, "데이터통신", "C", 4, 15.0, 16.0, "황호영", "상203"),
    				new subject(0, "데이터통신", "D", 1, 16.0, 17.0, "김동욱", "공305"),
    				new subject(2, "데이터통신", "N", 1, 17.0, 18.0, "황호영", "상203"),
    				new subject(2, "데이터통신", "O", 1, 18.0, 19.0, "김동욱", "공305")
    		};
    		알고 = new subject[]{
    				new subject(1, "알고리즘", "7", 2, 15.0, 16.5, "심규현", "공309"),
    				new subject(1, "알고리즘", "8", 4, 12.0, 13.0, "권영미", "상306"),
    				new subject(0, "알고리즘", "A", 4, 11.0, 12.0, "권영미", "상306"),
    				new subject(0, "알고리즘", "B", 2, 15.0, 16.5, "유상미", "공201"),
    				new subject(0, "알고리즘", "C", 2, 9.0, 10.5, "강희중", "공202"),
    				new subject(0, "알고리즘", "D", 2, 10.5, 12.0, "강희중", "공202"),
    				new subject(2, "알고리즘", "N", 3, 18.0, 19.5, "유상미", "공202"),
    				new subject(2, "알고리즘", "O", 2, 19.5, 21.0, "유상미", "공201")
    		};
    		오소 = new subject[]{
    				new subject(1, "오픈소스소프트웨어", "7", 0, 15.0, 16.5, "김남윤", "상607"),
    				new subject(0, "오픈소스소프트웨어", "A", 3, 13.5, 15.0, "김남윤", "상607"),
    				new subject(0, "오픈소스소프트웨어", "B", 3, 15.0, 16.5, "김남윤", "상602"),
    				new subject(2, "오픈소스소프트웨어", "N", 0, 18.0, 19.5, "김남윤", "상607")
    		};
    		선대 = new subject[]{
    				new subject(0, "선형대수", "A", 1, 17.0, 18.0, "권영미", "상203"),
    				new subject(2, "선형대수", "N", 1, 18.0, 19.0, "권영미", "상203")
    		};
    		모스시 = new subject[]{
    				new subject(1, "모바일&스마트시스템", "7", 1, 13.0, 16.0, "황기태", "공102"),
    				new subject(1, "모바일&스마트시스템", "8", 1, 13.0, 16.0, "한기준", "공309"),
    				new subject(1, "모바일&스마트시스템", "9", 0, 13.5, 16.5, "이재문", "공101"),
    				new subject(0, "모바일&스마트시스템", "A", 3, 9.0, 12.0, "황기태", "공102"),
    				new subject(0, "모바일&스마트시스템", "B", 1, 13.0, 16.0, "이재문", "공101"),
    				new subject(0, "모바일&스마트시스템", "C", 3, 9.0, 12.0, "이재문", "공101"),
    				new subject(2, "모바일&스마트시스템", "N", 1, 19.0, 22.0, "한기준", "공309")
    		};
    		웹프 = new subject[]{
    				new subject(1, "웹프로그래밍", "7", 3, 15.0, 16.5, "김인희", "공201"),
    				new subject(1, "웹프로그래밍", "8", 2, 13.5, 15.0, "심규현", "공309"),
    				new subject(0, "웹프로그래밍", "A", 0, 9.0, 12.0, "김성동", "상606"),
    				new subject(0, "웹프로그래밍", "B", 3, 13.5, 15.0, "김인희", "공201"),
    				new subject(2, "웹프로그래밍", "N", 3, 18.0, 19.5, "김인희", "공201"),
    				new subject(2, "웹프로그래밍", "O", 2, 18.0, 19.5, "심규현", "공309")
    		};
    		빅데 = new subject[]{
    				new subject(0, "빅데이터기초", "A", 2, 10.5, 12.0, "신성", "상306"),
    				new subject(0, "빅데이터기초", "B", 2, 12.0, 13.5, "신성", "상306"),
    				new subject(2, "빅데이터기초", "N", 3, 19.5, 21.0, "신성", "공102")
    		};
    		겜그 = new subject[]{
    				new subject(1, "게임그래픽&애니메이션", "7", 1, 16.0, 17.0, "이항찬", "공202"),
    				new subject(0, "게임그래픽&애니메이션", "A", 1, 10.0, 11.0, "이항찬", "공202"),
    				new subject(0, "게임그래픽&애니메이션", "B", 1, 11.0, 12.0, "이항찬", "공202"),
    				new subject(2, "게임그래픽&애니메이션", "N", 1, 18.0, 19.0, "이항찬", "공202")
    		};
    		break;
    	case "3학년":
    		시프 = new subject[] {
    				new subject(1, "시스템프로그래밍", "7", 0, 16.5, 18.0, "안영아", "공202"),
    				new subject(1, "시스템프로그래밍", "8", 0, 16.5, 18.0, "전원호", "공309"),
    				new subject(0, "시스템프로그래밍", "A", 0, 15.0, 16.5, "김진환", "공309"),
    				new subject(0, "시스템프로그래밍", "B", 0, 15.0, 16.5, "안영아", "공202"),
    				new subject(0, "시스템프로그래밍", "C", 0, 12.0, 13.5, "전원호", "공309"),
    				new subject(2, "시스템프로그래밍", "N", 0, 18.0, 19.5, "안영아", "공202")
    		};
    		설패 = new subject[] {
    				new subject(1, "설계패턴", "7", 0, 13.5, 15.0, "정인상", "공305"),
    				new subject(1, "설계패턴", "8", 0, 13.5, 15.0, "한기준", "미B104"),
    				new subject(0, "설계패턴", "A", 0, 10.5, 12.0, "정인상", "공305"),
    				new subject(0, "설계패턴", "B", 2, 10.5, 12.0, "정인상", "공305"),
    				new subject(0, "설계패턴", "C", 0, 10.5, 12.0, "한기준", "미B104"),
    				new subject(2, "설계패턴", "N", 0, 18.0, 19.5, "정인상", "공305")
    		};
    		네프 = new subject[] {
    				new subject(1, "네트워크프로그래밍", "7", 2, 16.5, 18.0, "신성", "상304"),
    				new subject(0, "네트워크프로그래밍", "A", 3, 16.5, 18.0, "허준영", "상306"),
    				new subject(0, "네트워크프로그래밍", "B", 2, 15.0, 16.5, "허준영", "상304"),
    				new subject(0, "네트워크프로그래밍", "C", 0, 15.0, 16.5, "허준영", "탐203"),
    				new subject(2, "네트워크프로그래밍", "N", 0, 19.5, 21.0, "허준영", "상306")
    		};
    		비젼 = new subject[] {
    				new subject(1, "컴퓨터비젼", "7", 2, 10.5, 12.0, "엄종석", "공201"),
    				new subject(0, "컴퓨터비젼", "A", 2, 13.5, 15.0, "엄종석", "미B107")
    		};
    		고모프 = new subject[] {
    				new subject(1, "고급모바일프로그래밍", "7", 1, 17.0, 18.0, "허준영", "상306"),
    				new subject(0, "고급모바일프로그래밍", "A", 1, 11.0, 12.0, "허준영", "탐203"),
    				new subject(0, "고급모바일프로그래밍", "B", 1, 12.0, 13.0, "허준영", "탐203"),
    				new subject(2, "고급모바일프로그래밍", "N", 1, 18.0, 19.0, "허준영", "상306")
    		};
    		웹크 = new subject[] {
    				new subject(1, "웹프레임워크1", "7", 3, 16.5, 18.0, "심규현", "공309"),
    				new subject(0, "웹프레임워크1", "A", 0, 15.0, 16.5, "박승현", "공102"),
    				new subject(0, "웹프레임워크1", "B", 3, 16.5, 18.0, "박승현", "공305"),
    				new subject(0, "웹프레임워크1", "C", 3, 13.5, 15.0, "심규현", "공309"),
    				new subject(2, "웹프레임워크1", "N", 0, 19.5, 21.0, "박승현", "공102")
    		};
    		데베 = new subject[] {
    				new subject(1, "데이터베이스설계", "7", 0, 16.5, 18.0, "장재영", "상501"),
    				new subject(0, "데이터베이스설계", "A", 3, 10.5, 12.0, "장재영", "공305"),
    				new subject(0, "데이터베이스설계", "B", 3, 15.0, 16.5, "장재영", "공305"),
    				new subject(2, "데이터베이스설계", "N", 0, 18.0, 19.5, "장재영", "상501")
    		};
    		가상 = new subject[] {
    				new subject(1, "가상현실", "7", 1, 15.0, 17.0, "김진모/조세홍", "공201"),
    				new subject(1, "가상현실", "8", 1, 17.0, 19.0, "김진모/조세홍", "공201"),
    				new subject(0, "가상현실", "A", 1, 12.0, 14.0, "김진모/조세홍", "공201")
    		};
    		break;
    	}
    	

		
		
    }
    
    public void make_tt(List<String> selectedCourses, String timeOfDay, String selectedYear) {
    	System.out.println("랜덤 생성 시작");
		//랜덤 데이터 선택
		Random random = new Random();
		int r;
		int index=0;
		String course;
		boolean collision; //충돌여부 true가 충돌O / false가 충돌X
		int timeType = "주간".equals(timeOfDay) ? 0 : 2;
		
		for(int i=0; i<selectedCourses.size(); i++) {
	    	System.out.println(i + "단계 추가");
			course = selectedCourses.get(i); 
			collision = true;
			switch(selectedYear) {
			case "2학년":
				switch(course) {
				case "객체지향언어2":
					if(checkRest(selectedCourses, 객지, timeType)) { //충돌 X 수업이 존재한다면
						r = tt.chooseNewSubject(collision, selected, 객지, random, timeType);
						selected[index++] = 객지[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터통신":
					if(checkRest(selectedCourses, 데통, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데통, random, timeType);
						selected[index++] = 데통[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "알고리즘":
					if(checkRest(selectedCourses, 알고, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 알고, random, timeType);
						selected[index++] = 알고[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "오픈소스소프트웨어":
					if(checkRest(selectedCourses, 오소, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 오소, random, timeType);
						selected[index++] = 오소[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "선형대수":
					if(checkRest(selectedCourses, 선대, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 선대, random, timeType);
						selected[index++] = 선대[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "모바일&스마트시스템":
					if(checkRest(selectedCourses, 모스시, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 모스시, random, timeType);
						selected[index++] = 모스시[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프로그래밍":
					if(checkRest(selectedCourses, 웹프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹프, random, timeType);
						selected[index++] = 웹프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "빅데이터기초":
					if(checkRest(selectedCourses, 빅데, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 빅데, random, timeType);
						selected[index++] = 빅데[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "게임그래픽&애니메이션":
					if(checkRest(selectedCourses, 겜그, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 겜그, random, timeType);
						selected[index++] = 겜그[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			case "3학년":
				switch(course) {
				case "시스템프로그래밍":
					if(checkRest(selectedCourses, 시프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 시프, random, timeType);
						selected[index++] = 시프[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "설계패턴":
					if(checkRest(selectedCourses, 설패, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 설패, random, timeType);
						selected[index++] = 설패[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "네트워크프로그래밍":
					if(checkRest(selectedCourses, 네프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 네프, random, timeType);
						selected[index++] = 네프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "컴퓨터비젼":
					if(checkRest(selectedCourses, 비젼, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 비젼, random, timeType);
						selected[index++] = 비젼[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "고급모바일프로그래밍":
					if(checkRest(selectedCourses, 고모프, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 고모프, random, timeType);
						selected[index++] = 고모프[r];
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "웹프레임워크1":
					if(checkRest(selectedCourses, 웹크, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 웹크, random, timeType);
						selected[index++] = 웹크[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "데이터베이스설계":
					if(checkRest(selectedCourses, 데베, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 데베, random, timeType);
						selected[index++] = 데베[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				case "가상현실":
					if(checkRest(selectedCourses, 가상, timeType)) {
						r = tt.chooseNewSubject(collision, selected, 가상, random, timeType);
						selected[index++] = 가상[r]; 
					}
					else { //초기화
						System.out.println("초기화");
						for(int t=0; t<selected.length; t++) {
							selected[t]=null;
						}
						index=0;
						i=-1;
						continue;
					}
					break;
				}
				break;
			}			
		}
	}
    
    public boolean checkRest(List<String> selectedCourses, subject[] subjectType, int timeType) {
    	boolean possible;
    	int i,j;
    	for(i=0; i<subjectType.length; i++) {
    		possible = true; //선택한 가능한게 존재
    		for(j=0; selected[j]!=null; j++) {
				if(subjectType[i].getDay_night()==timeType || subjectType[i].getDay_night()==1) { //주야간 같을때만
	    			if(selected[j].getDay() == subjectType[i].getDay()) { //요일이 같은 경우
	    				if((selected[j].getStartTime() <= subjectType[i].getStartTime() &&
	        				subjectType[i].getStartTime() < selected[j].getEndTime()) ||
	        				(selected[j].getStartTime() < subjectType[i].getEndTime() &&
	        				subjectType[i].getEndTime() <= selected[j].getEndTime())) { //시간 충돌이 있는 경우
	    					possible = false;
	    					break;
	    				}
	    			}
				}
				else { //주야간 다르면 선택 불가
					possible = false;
					break;
				}
    		}
    		//selected[]전체와 subjectType 중 수업1개의 충돌을 비교
    		//possible이 마지막에 true인 경우 -> 가능한 수업이 존재한다?
    		if(possible==false) {
				System.out.println("subjectType" + i + "와 selected" + j + " 충돌");
    		}
    		else {
    			System.out.println("선택 가능한 수업 존재" + i);
    			return true;
    		}
    	}
    	//다 돌았지만 하나도 가능한게 없다
    	System.out.println("모든 수업 불가");
    	return false;
    }

    
    public class subject {
    	private int day_night; //주간0 합반1 야간2
    	private String sub_name; //과목명
    	private String className; //분반
    	private int day; //요일 0~4
    	private double start_time; //시작 시간
    	private double end_time; //종료시간
    	private String professor; //교수
    	private String classroom; //강의실


    	public subject(int day_night, String sub_name, String className, int day, double start_time, double end_time, String professor, String classroom) {
    		this.day_night = day_night;
    		this.sub_name=sub_name;
    		this.className=className;
    		this.day=day;
    		this.start_time=start_time;
    		this.end_time=end_time;
    		this.professor=professor;
    		this.classroom=classroom;
    	}
    	
    	public int getDay_night() {
    		return this.day_night;
    	}
    	public String getSub_name() {
    		return this.sub_name;
    	}
    	public String getClassname() {
    		return this.className;
    	}
    	public int getDay() {
    		return this.day;
    	}
    	public double getStartTime() {
    		return this.start_time;
    	}
    	public double getEndTime() {
    		return this.end_time;
    	}
    	public String getProfessor() {
    		return this.professor;
    	}
    	public String getClassroom() {
    		return this.classroom;
    	}
    }
    public class ttGenerator {
		//랜덤숫자로 기존 수업들과 충돌여부 고려
		public int chooseNewSubject(boolean collision, subject[] selected, subject[] subjectType, Random random, int timeType) {
			System.out.println("ttGenerator실행");
			int r;
			while(collision) { //충돌안할때까지
				r = random.nextInt(subjectType.length); //랜덤
				
				if(subjectType[r].getDay_night()==timeType || subjectType[r].getDay_night()==1) { //주간일때만 or 야간일때만
					collision = false;
					for(int i=0; selected[i]!=null; i++) { //이전 데이터와 비교
						if(selected[i].getDay()==subjectType[r].getDay()) { //요일이 같을때만 충돌여부 확인
							if((selected[i].getStartTime()<= subjectType[r].getStartTime() &&
									subjectType[r].getStartTime() < selected[i].getEndTime()) ||
									(selected[i].getStartTime()< subjectType[r].getEndTime() &&
											subjectType[r].getEndTime() <= selected[i].getEndTime())) { //시간이 겹친다면
								collision = true; //충돌함
								break; //다시 while문으로
							}
						}
					}
					
					if(!collision) { //for문을 진행하고도 false가 유지된다면 충돌이 X다는 것
						System.out.println("ttGenerator-충돌X " + r);
						return r;
					}
				}
			}
			System.out.println("오류 발생");
			return -1;
		}
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3100)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-11 20:30:01.233
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3100)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-11 20:30:01.256
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2185)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3069)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2238)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3100)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2023-12-11 20:47:07.526 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-11 20:47:20.006
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-11 20:47:20.006
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-11 20:47:26.069
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-12-11 20:55:18.743 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=ko_KR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-12-11 20:55:34.167
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-12-11 20:55:34.167
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-12-11 20:55:39.678
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\user'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
